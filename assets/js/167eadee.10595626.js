"use strict";(self.webpackChunkliquidscript_docs=self.webpackChunkliquidscript_docs||[]).push([[68483],{93391:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var i=t(74848),s=t(28453);const r={},a="Function: atMost()",c={id:"api/namespaces/filters/functions/atMost",title:"Function: atMost()",description:"atMost(this, left, arg): NumberT",source:"@site/docs/api/namespaces/filters/functions/atMost.md",sourceDirName:"api/namespaces/filters/functions",slug:"/api/namespaces/filters/functions/atMost",permalink:"/liquidscript/api/namespaces/filters/functions/atMost",draft:!1,unlisted:!1,editUrl:"https://github.com/jg-rp/liquidscript/tree/docs/docs/api/namespaces/filters/functions/atMost.md",tags:[],version:"current",frontMatter:{},sidebar:"API",previous:{title:"Function: atLeast()",permalink:"/liquidscript/api/namespaces/filters/functions/atLeast"},next:{title:"Function: base64Decode()",permalink:"/liquidscript/api/namespaces/filters/functions/base64Decode"}},o={},l=[{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Defined in",id:"defined-in",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"function-atmost",children:"Function: atMost()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"atMost"}),"(",(0,i.jsx)(n.code,{children:"this"}),", ",(0,i.jsx)(n.code,{children:"left"}),", ",(0,i.jsx)(n.code,{children:"arg"}),"): ",(0,i.jsx)(n.a,{href:"/liquidscript/api/type-aliases/NumberT",children:(0,i.jsx)(n.code,{children:"NumberT"})})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Return the minimum of the filter's input value and its argument. If either\ninput value or argument are string representations of an integer or float,\nthey will be cast to an integer or float prior to comparison."}),"\n",(0,i.jsxs)(n.p,{children:["If either input value or argument can not be cast to an integer or float,\n",(0,i.jsx)(n.code,{children:"0"})," will be used instead."]}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"this"}),": ",(0,i.jsx)(n.a,{href:"/liquidscript/api/type-aliases/FilterContext",children:(0,i.jsx)(n.code,{children:"FilterContext"})})]}),"\n",(0,i.jsx)(n.p,{children:"An object containing a reference to the active render context\nand any keyword/named arguments."}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"left"}),": ",(0,i.jsx)(n.code,{children:"unknown"})]}),"\n",(0,i.jsx)(n.p,{children:"Any value. If it can't be converted to a number, zero will be\nused instead."}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"arg"}),": ",(0,i.jsx)(n.code,{children:"unknown"})]}),"\n",(0,i.jsx)(n.p,{children:"Any value. If it can't be converted to a number, zero will be\nused instead."}),"\n",(0,i.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"/liquidscript/api/type-aliases/NumberT",children:(0,i.jsx)(n.code,{children:"NumberT"})})}),"\n",(0,i.jsx)(n.p,{children:"The minimum of the input value and the argument value."}),"\n",(0,i.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/jg-rp/liquidscript/blob/a95b26bf6f4636a0a0876e92052e494be9b9708e/src/builtin/filters/math.ts#L62",children:"src/builtin/filters/math.ts:62"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var i=t(96540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);