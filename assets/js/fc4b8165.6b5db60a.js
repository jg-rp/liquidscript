"use strict";(self.webpackChunkliquidscript_docs=self.webpackChunkliquidscript_docs||[]).push([[24],{9494:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return u}});var a=r(6687);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),o=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},d=function(e){var t=o(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),c=o(r),u=n,k=c["".concat(s,".").concat(u)]||c[u]||m[u]||i;return r?a.createElement(k,l(l({ref:t},d),{},{components:r})):a.createElement(k,l({ref:t},d))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=c;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:n,l[1]=p;for(var o=2;o<i;o++)l[o]=r[o];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},6264:function(e,t,r){r.r(t),r.d(t,{assets:function(){return d},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return p},metadata:function(){return o},toc:function(){return m}});var a=r(9149),n=r(8332),i=(r(6687),r(9494)),l=["components"],p={id:"Parser",title:"Interface: Parser",sidebar_label:"Parser",sidebar_position:0,custom_edit_url:null},s=void 0,o={unversionedId:"api/interfaces/Parser",id:"api/interfaces/Parser",title:"Interface: Parser",description:"Implemented by",source:"@site/docs/api/interfaces/Parser.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/Parser",permalink:"/liquidscript/api/interfaces/Parser",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"Parser",title:"Interface: Parser",sidebar_label:"Parser",sidebar_position:0,custom_edit_url:null},sidebar:"API",previous:{title:"Node",permalink:"/liquidscript/api/interfaces/Node"},next:{title:"RenderStream",permalink:"/liquidscript/api/interfaces/RenderStream"}},d={},m=[{value:"Implemented by",id:"implemented-by",level:2},{value:"Methods",id:"methods",level:2},{value:"parse",id:"parse",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"parseBlock",id:"parseblock",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"parseLiquid",id:"parseliquid",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-2",level:4}],c={toc:m};function u(e){var t=e.components,r=(0,n.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"implemented-by"},"Implemented by"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/liquidscript/api/classes/TemplateParser"},(0,i.kt)("inlineCode",{parentName:"a"},"TemplateParser")))),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"parse"},"parse"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"parse"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"stream"),"): ",(0,i.kt)("a",{parentName:"p",href:"/liquidscript/api/classes/Root"},(0,i.kt)("inlineCode",{parentName:"a"},"Root"))),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"stream")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/liquidscript/api/interfaces/tokens.TokenStream"},(0,i.kt)("inlineCode",{parentName:"a"},"TokenStream")))))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/liquidscript/api/classes/Root"},(0,i.kt)("inlineCode",{parentName:"a"},"Root"))),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/f159c85/src/parse.ts#L15"},"src/parse.ts:15")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"parseblock"},"parseBlock"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"parseBlock"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"stream"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"end"),"): ",(0,i.kt)("a",{parentName:"p",href:"/liquidscript/api/classes/BlockNode"},(0,i.kt)("inlineCode",{parentName:"a"},"BlockNode"))),(0,i.kt)("p",null,"Parse a block of tokens from the given stream until an end\ntag is found or the end of the stream is reached."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"stream")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/liquidscript/api/interfaces/tokens.TokenStream"},(0,i.kt)("inlineCode",{parentName:"a"},"TokenStream"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"A template token stream.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"end")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Set"),"<",(0,i.kt)("inlineCode",{parentName:"td"},"string"),">"),(0,i.kt)("td",{parentName:"tr",align:"left"},"A set of tag names that indicate the end of the block.")))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/liquidscript/api/classes/BlockNode"},(0,i.kt)("inlineCode",{parentName:"a"},"BlockNode"))),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/f159c85/src/parse.ts#L25"},"src/parse.ts:25")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"parseliquid"},"parseLiquid"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"parseLiquid"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"stream"),"): ",(0,i.kt)("a",{parentName:"p",href:"/liquidscript/api/classes/BlockNode"},(0,i.kt)("inlineCode",{parentName:"a"},"BlockNode"))),(0,i.kt)("p",null,"Like ",(0,i.kt)("a",{parentName:"p",href:"/liquidscript/api/interfaces/Parser#parseblock"},"parseBlock"),", but read until the end of the stream.\nUseful for the ",(0,i.kt)("inlineCode",{parentName:"p"},"liquid")," tag."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"stream")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/liquidscript/api/interfaces/tokens.TokenStream"},(0,i.kt)("inlineCode",{parentName:"a"},"TokenStream"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"A template token stream.")))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/liquidscript/api/classes/BlockNode"},(0,i.kt)("inlineCode",{parentName:"a"},"BlockNode"))),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/f159c85/src/parse.ts#L33"},"src/parse.ts:33")))}u.isMDXComponent=!0}}]);