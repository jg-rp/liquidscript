"use strict";(self.webpackChunkliquidscript_docs=self.webpackChunkliquidscript_docs||[]).push([[9618],{9494:function(e,t,a){a.d(t,{Zo:function(){return s},kt:function(){return o}});var n=a(6687);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),u=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=u(e.components);return n.createElement(d.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=u(a),o=r,f=m["".concat(d,".").concat(o)]||m[o]||k[o]||i;return a?n.createElement(f,l(l({ref:t},s),{},{components:a})):n.createElement(f,l({ref:t},s))}));function o(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=m;var p={};for(var d in t)hasOwnProperty.call(t,d)&&(p[d]=t[d]);p.originalType=e,p.mdxType="string"==typeof e?e:r,l[1]=p;for(var u=2;u<i;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},7383:function(e,t,a){a.r(t),a.d(t,{assets:function(){return s},contentTitle:function(){return d},default:function(){return o},frontMatter:function(){return p},metadata:function(){return u},toc:function(){return k}});var n=a(9149),r=a(8332),i=(a(6687),a(9494)),l=["components"],p={id:"object",title:"Namespace: object",sidebar_label:"object",sidebar_position:0,custom_edit_url:null},d=void 0,u={unversionedId:"api/namespaces/object",id:"api/namespaces/object",title:"Namespace: object",description:"References",source:"@site/docs/api/namespaces/object.md",sourceDirName:"api/namespaces",slug:"/api/namespaces/object",permalink:"/liquidscript/api/namespaces/object",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"object",title:"Namespace: object",sidebar_label:"object",sidebar_position:0,custom_edit_url:null},sidebar:"API",previous:{title:"filters",permalink:"/liquidscript/api/namespaces/filters"},next:{title:"tags",permalink:"/liquidscript/api/namespaces/tags"}},s={},k=[{value:"References",id:"references",level:2},{value:"ContextScope",id:"contextscope",level:3},{value:"Type aliases",id:"type-aliases",level:2},{value:"LiquidArrayLike",id:"liquidarraylike",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"Functions",id:"functions",level:2},{value:"isArray",id:"isarray",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"isComparable",id:"iscomparable",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"isContextScope",id:"iscontextscope",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"isFunction",id:"isfunction",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"isIterable",id:"isiterable",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"isLiquidArrayLike",id:"isliquidarraylike",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"isNumber",id:"isnumber",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"isObject",id:"isobject",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"isPrimitiveInteger",id:"isprimitiveinteger",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"isPrimitiveNumber",id:"isprimitivenumber",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"isPropertyKey",id:"ispropertykey",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"isString",id:"isstring",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"isSymbol",id:"issymbol",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"isUndefined",id:"isundefined",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-13",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"liquidStringify",id:"liquidstringify",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Defined in",id:"defined-in-15",level:4}],m={toc:k};function o(e){var t=e.components,a=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"references"},"References"),(0,i.kt)("h3",{id:"contextscope"},"ContextScope"),(0,i.kt)("p",null,"Re-exports ",(0,i.kt)("a",{parentName:"p",href:"/liquidscript/api/modules#contextscope"},"ContextScope")),(0,i.kt)("h2",{id:"type-aliases"},"Type aliases"),(0,i.kt)("h3",{id:"liquidarraylike"},"LiquidArrayLike"),(0,i.kt)("p",null,"\u01ac ",(0,i.kt)("strong",{parentName:"p"},"LiquidArrayLike"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"unknown"),"[]"),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/f159c85/src/types.ts#L131"},"src/types.ts:131")),(0,i.kt)("h2",{id:"functions"},"Functions"),(0,i.kt)("h3",{id:"isarray"},"isArray"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isArray"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"value"),"): value is unknown[]"),(0,i.kt)("p",null,"A type predicate for the Array object."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"value")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Any value")))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,"value is unknown[]"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"true")," if the value is an array."),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/f159c85/src/types.ts#L28"},"src/types.ts:28")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"iscomparable"},"isComparable"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isComparable"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"value"),"): value is string ","|"," number ","|"," NumberT"),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"value")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown"))))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,"value is string ","|"," number ","|"," NumberT"),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/f159c85/src/types.ts#L92"},"src/types.ts:92")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"iscontextscope"},"isContextScope"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isContextScope"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"value"),"): value is ContextScope"),(0,i.kt)("p",null,"A type predicate for the ",(0,i.kt)("inlineCode",{parentName:"p"},"ContextScope")," type."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"value")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Any value")))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,"value is ContextScope"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"true")," if the value is a non-array object."),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/f159c85/src/types.ts#L150"},"src/types.ts:150")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isfunction"},"isFunction"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isFunction"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"value"),"): value is CallableFunction"),(0,i.kt)("p",null,"A type predicate for Function."),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"value")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Any value")))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,"value is CallableFunction"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"true")," if the value is a function."),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/f159c85/src/types.ts#L49"},"src/types.ts:49")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isiterable"},"isIterable"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isIterable"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"value"),"): value is Iterable<unknown",">"),(0,i.kt)("p",null,"A type predicate for the Iterable interface."),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"value")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Any value")))),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,"value is Iterable<unknown",">"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"true")," if the value is iterable."),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/f159c85/src/types.ts#L118"},"src/types.ts:118")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isliquidarraylike"},"isLiquidArrayLike"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isLiquidArrayLike"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"value"),"): value is LiquidArrayLike"),(0,i.kt)("p",null,"A type predicate for objects that a considered array-like in Liquid."),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"value")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Any value")))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,"value is LiquidArrayLike"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"true")," if the value is considered array-like, ",(0,i.kt)("inlineCode",{parentName:"p"},"false")," otherwise."),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/f159c85/src/types.ts#L138"},"src/types.ts:138")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isnumber"},"isNumber"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isNumber"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"value"),"): value is number ","|"," NumberT"),(0,i.kt)("p",null,"A type predicate for a primitive number or the wrapped, Liquid number type."),(0,i.kt)("h4",{id:"parameters-6"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"value")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Any value")))),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,"value is number ","|"," NumberT"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"true")," if the value is a number or ",(0,i.kt)("inlineCode",{parentName:"p"},"NumberT"),"."),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/f159c85/src/types.ts#L70"},"src/types.ts:70")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isobject"},"isObject"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isObject"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"value"),"): value is object"),(0,i.kt)("p",null,"A type predicate for Object."),(0,i.kt)("h4",{id:"parameters-7"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"value")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Any value")))),(0,i.kt)("h4",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,"value is object"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"true")," if the value is an object."),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/f159c85/src/types.ts#L37"},"src/types.ts:37")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isprimitiveinteger"},"isPrimitiveInteger"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isPrimitiveInteger"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"value"),"): value is number"),(0,i.kt)("p",null,"A type predicate for a primitive number that is an integer."),(0,i.kt)("h4",{id:"parameters-8"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"value")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Any value")))),(0,i.kt)("h4",{id:"returns-8"},"Returns"),(0,i.kt)("p",null,"value is number"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"true")," if the value is a primitive number and is an integer."),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/f159c85/src/types.ts#L88"},"src/types.ts:88")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isprimitivenumber"},"isPrimitiveNumber"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isPrimitiveNumber"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"value"),"): value is number"),(0,i.kt)("p",null,"A type predicate for the number primitive."),(0,i.kt)("h4",{id:"parameters-9"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"value")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Any value")))),(0,i.kt)("h4",{id:"returns-9"},"Returns"),(0,i.kt)("p",null,"value is number"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"true")," if the value is a primitive number."),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/f159c85/src/types.ts#L79"},"src/types.ts:79")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"ispropertykey"},"isPropertyKey"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isPropertyKey"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"value"),"): value is PropertyKey"),(0,i.kt)("p",null,"A type predicate for an object property key."),(0,i.kt)("h4",{id:"parameters-10"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"value")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Any value")))),(0,i.kt)("h4",{id:"returns-10"},"Returns"),(0,i.kt)("p",null,"value is PropertyKey"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"true")," if the value is a string, number or symbol."),(0,i.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/f159c85/src/types.ts#L58"},"src/types.ts:58")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isstring"},"isString"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isString"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"value"),"): value is string"),(0,i.kt)("p",null,"A type predicate for the primitive string."),(0,i.kt)("h4",{id:"parameters-11"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"value")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Any value")))),(0,i.kt)("h4",{id:"returns-11"},"Returns"),(0,i.kt)("p",null,"value is string"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"true")," if the value is a primitive string."),(0,i.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/f159c85/src/types.ts#L10"},"src/types.ts:10")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"issymbol"},"isSymbol"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isSymbol"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"value"),"): value is symbol"),(0,i.kt)("p",null,"A type predicate for the primitive Symbol."),(0,i.kt)("h4",{id:"parameters-12"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"value")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Any value")))),(0,i.kt)("h4",{id:"returns-12"},"Returns"),(0,i.kt)("p",null,"value is symbol"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"true")," if the value is a symbol."),(0,i.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/f159c85/src/types.ts#L19"},"src/types.ts:19")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isundefined"},"isUndefined"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isUndefined"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"value"),"): value is Undefined"),(0,i.kt)("p",null,"A type predicate for ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," or Liquid's undefined wrapper."),(0,i.kt)("h4",{id:"parameters-13"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"value")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Any value")))),(0,i.kt)("h4",{id:"returns-13"},"Returns"),(0,i.kt)("p",null,"value is Undefined"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"true")," if the value is ",(0,i.kt)("inlineCode",{parentName:"p"},"undefined")," or a subclass of ",(0,i.kt)("inlineCode",{parentName:"p"},"Undefined"),"."),(0,i.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/f159c85/src/types.ts#L127"},"src/types.ts:127")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"liquidstringify"},"liquidStringify"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"liquidStringify"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"value"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"Stringify a value following Liquid semantics."),(0,i.kt)("h4",{id:"parameters-14"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"value")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"unknown")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Any value")))),(0,i.kt)("h4",{id:"returns-14"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("p",null,"A Liquid string representation of the value."),(0,i.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/f159c85/src/types.ts#L103"},"src/types.ts:103")))}o.isMDXComponent=!0}}]);