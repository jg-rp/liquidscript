"use strict";(self.webpackChunkliquidscript_docs=self.webpackChunkliquidscript_docs||[]).push([[91420],{48364:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>u,toc:()=>a});var i=r(74848),t=r(28453);const s={},c="Function: parseNumberT()",u={id:"api/functions/parseNumberT",title:"Function: parseNumberT()",description:"parseNumberT(n): NumberT",source:"@site/docs/api/functions/parseNumberT.md",sourceDirName:"api/functions",slug:"/api/functions/parseNumberT",permalink:"/liquidscript/api/functions/parseNumberT",draft:!1,unlisted:!1,editUrl:"https://github.com/jg-rp/liquidscript/tree/docs/docs/api/functions/parseNumberT.md",tags:[],version:"current",frontMatter:{},sidebar:"API",previous:{title:"Function: isNumberT()",permalink:"/liquidscript/api/functions/isNumberT"},next:{title:"Function: range()",permalink:"/liquidscript/api/functions/range"}},o={},a=[{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Defined in",id:"defined-in",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",strong:"strong",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"function-parsenumbert",children:"Function: parseNumberT()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"parseNumberT"}),"(",(0,i.jsx)(n.code,{children:"n"}),"): ",(0,i.jsx)(n.a,{href:"/liquidscript/api/type-aliases/NumberT",children:(0,i.jsx)(n.code,{children:"NumberT"})})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Parse a string, primitive number or Number object to a Liquid\ninteger or float."}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"n"}),": ",(0,i.jsx)(n.a,{href:"/liquidscript/api/type-aliases/N",children:(0,i.jsx)(n.code,{children:"N"})})]}),"\n",(0,i.jsx)(n.p,{children:"A number or string representation of a number."}),"\n",(0,i.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"/liquidscript/api/type-aliases/NumberT",children:(0,i.jsx)(n.code,{children:"NumberT"})})}),"\n",(0,i.jsx)(n.p,{children:"A wrapped number representing a Liquid integer or float."}),"\n",(0,i.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/jg-rp/liquidscript/blob/a95b26bf6f4636a0a0876e92052e494be9b9708e/src/number.ts#L191",children:"src/number.ts:191"})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>u});var i=r(96540);const t={},s=i.createContext(t);function c(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function u(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);