"use strict";(self.webpackChunkliquidscript_docs=self.webpackChunkliquidscript_docs||[]).push([[9086],{9494:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(6687);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=r,f=c["".concat(s,".").concat(m)]||c[m]||d[m]||i;return n?a.createElement(f,o(o({ref:t},u),{},{components:n})):a.createElement(f,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},835:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return d}});var a=n(9149),r=n(8332),i=(n(6687),n(9494)),o=["components"],l={},s="Extra Tags",p={unversionedId:"extra/tags",id:"extra/tags",title:"Extra Tags",description:"This page documents extra tags available in LiquidScript. These tags are not part of standard Liquid and are not registered automatically with each new LiquidScript environment.",source:"@site/docs/extra/tags.md",sourceDirName:"extra",slug:"/extra/tags",permalink:"/liquidscript/extra/tags",editUrl:"https://github.com/jg-rp/liquidscript/tree/docs/docs/extra/tags.md",tags:[],version:"current",frontMatter:{},sidebar:"languageSidebar",previous:{title:"Liquid Tags",permalink:"/liquidscript/language/tags"}},u={},d=[{value:"if (not)",id:"if-not",level:2},{value:"with",id:"with",level:2}],c={toc:d};function m(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"extra-tags"},"Extra Tags"),(0,i.kt)("p",null,"This page documents extra tags available in LiquidScript. These tags are not part of standard Liquid and are not registered automatically with each new LiquidScript environment."),(0,i.kt)("h2",{id:"if-not"},"if (not)"),(0,i.kt)("p",null,"A drop-in replacement for the standard ",(0,i.kt)("a",{parentName:"p",href:"/liquidscript/language/tags#if"},(0,i.kt)("inlineCode",{parentName:"a"},"if"))," tag that supports logical ",(0,i.kt)("inlineCode",{parentName:"p"},"not")," and grouping with parentheses. Please see ",(0,i.kt)("a",{parentName:"p",href:"/liquidscript/language/tags#expressions"},"the tag reference")," for a description of the standard ",(0,i.kt)("inlineCode",{parentName:"p"},"if")," expression."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"{% if <expression> %}\n  <literal,statement,tag> ...\n  [ {% elsif <expression> %} <literal,statement,tag> ... [ {% elsif <expression> %} ... ]]\n  [ {% else %} <literal,statement,tag> ... ]\n{% endif %}\n")),(0,i.kt)("p",null,"Register ",(0,i.kt)("inlineCode",{parentName:"p"},"liquidscript.extra.tags.IfNotTag")," with an ",(0,i.kt)("a",{parentName:"p",href:"/liquidscript/api/classes/Environment"},(0,i.kt)("inlineCode",{parentName:"a"},"Environment"))," to make it available to templates rendered from that environment."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'import { Environment, extra } from "liquidscript";\n\nconst env = new Environment();\nenv.addTag("if", new extra.tags.IfNotTag());\n')),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"and")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"or")," operators in Liquid are right associative. Where ",(0,i.kt)("inlineCode",{parentName:"p"},"true and false and false or true")," is equivalent to ",(0,i.kt)("inlineCode",{parentName:"p"},"(true and (false and (false or true)))"),", evaluating to ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),". JavaScript, on the other hand, would parse an equivalent expression as ",(0,i.kt)("inlineCode",{parentName:"p"},"(((true && false) && false) || true)"),", evaluating to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,i.kt)("p",null,"This implementation of ",(0,i.kt)("inlineCode",{parentName:"p"},"if")," maintains that right associativity so that any standard ",(0,i.kt)("inlineCode",{parentName:"p"},"if")," expression will behave the same, with or without non-standard ",(0,i.kt)("inlineCode",{parentName:"p"},"if"),". Only when ",(0,i.kt)("inlineCode",{parentName:"p"},"not")," or parentheses are used will behavior deviate from the standard."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-liquid",metastring:'title="example.liquid"',title:'"example.liquid"'},"{% if ((user.privileged and not user.blocked) or user.is_admin) %}\n  Hello, {{ user.name }}!\n{% else %}\n  User is blocked.\n{% endif %}\n")),(0,i.kt)("h2",{id:"with"},"with"),(0,i.kt)("p",null,"Extend the current scope for the duration of the ",(0,i.kt)("inlineCode",{parentName:"p"},"with")," block. Useful for aliasing long or nested variable names. Also useful for caching the result of a drop's methods, if the drop does not perform its own caching."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-plain"},"{% with <identifier>: <object> [, <identifier>: object ... ] %}\n  <literal,statement,tag> ...\n{% endwith %}\n")),(0,i.kt)("p",null,"Register ",(0,i.kt)("inlineCode",{parentName:"p"},"liquidscript.extra.tags.WithTag")," with an ",(0,i.kt)("a",{parentName:"p",href:"/liquidscript/api/classes/Environment"},(0,i.kt)("inlineCode",{parentName:"a"},"Environment"))," to make it available to templates rendered from that environment."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'import { Environment, extra } from "liquidscript";\n\nconst env = new Environment();\nenv.addTag("with", new extra.tags.WithTag());\n')),(0,i.kt)("p",null,"This implementation keeps template variables set inside the with block, using ",(0,i.kt)("inlineCode",{parentName:"p"},"assign")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"capture"),", alive after the block has been rendered."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-liquid",metastring:'title="example.liquid"',title:'"example.liquid"'},"{% with product: collection.products.first %}\n  {{- product.title -}}\n{% endwith %}\n")))}m.isMDXComponent=!0}}]);