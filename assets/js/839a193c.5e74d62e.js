"use strict";(self.webpackChunkliquidscript_docs=self.webpackChunkliquidscript_docs||[]).push([[40690],{68848:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>l,frontMatter:()=>r,metadata:()=>u,toc:()=>a});var s=i(74848),t=i(28453);const r={},c="Function: isNumber()",u={id:"api/namespaces/object/functions/isNumber",title:"Function: isNumber()",description:"isNumber(value): value is number \\| NumberT",source:"@site/docs/api/namespaces/object/functions/isNumber.md",sourceDirName:"api/namespaces/object/functions",slug:"/api/namespaces/object/functions/isNumber",permalink:"/liquidscript/api/namespaces/object/functions/isNumber",draft:!1,unlisted:!1,editUrl:"https://github.com/jg-rp/liquidscript/tree/docs/docs/api/namespaces/object/functions/isNumber.md",tags:[],version:"current",frontMatter:{},sidebar:"API",previous:{title:"Function: isLiquidArrayLike()",permalink:"/liquidscript/api/namespaces/object/functions/isLiquidArrayLike"},next:{title:"Function: isObject()",permalink:"/liquidscript/api/namespaces/object/functions/isObject"}},o={},a=[{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Defined in",id:"defined-in",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",strong:"strong",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"function-isnumber",children:"Function: isNumber()"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"isNumber"}),"(",(0,s.jsx)(n.code,{children:"value"}),"): value is number | NumberT"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"A type predicate for a primitive number or the wrapped, Liquid number type."}),"\n",(0,s.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(n.p,{children:["\u2022 ",(0,s.jsx)(n.strong,{children:"value"}),": ",(0,s.jsx)(n.code,{children:"unknown"})]}),"\n",(0,s.jsx)(n.p,{children:"Any value"}),"\n",(0,s.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:"value is number | NumberT"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"true"})," if the value is a number or ",(0,s.jsx)(n.code,{children:"NumberT"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/jg-rp/liquidscript/blob/a95b26bf6f4636a0a0876e92052e494be9b9708e/src/types.ts#L79",children:"src/types.ts:79"})})]})}function l(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>u});var s=i(96540);const t={},r=s.createContext(t);function c(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function u(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);