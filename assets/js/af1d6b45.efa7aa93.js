"use strict";(self.webpackChunkliquidscript_docs=self.webpackChunkliquidscript_docs||[]).push([[6756],{61225:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var i=t(74848),s=t(28453);const r={},c="Function: append()",a={id:"api/namespaces/filters/functions/append",title:"Function: append()",description:"append(this, left, other): string \\| Markup",source:"@site/docs/api/namespaces/filters/functions/append.md",sourceDirName:"api/namespaces/filters/functions",slug:"/api/namespaces/filters/functions/append",permalink:"/liquidscript/api/namespaces/filters/functions/append",draft:!1,unlisted:!1,editUrl:"https://github.com/jg-rp/liquidscript/tree/docs/docs/api/namespaces/filters/functions/append.md",tags:[],version:"current",frontMatter:{},sidebar:"API",previous:{title:"Function: abs()",permalink:"/liquidscript/api/namespaces/filters/functions/abs"},next:{title:"Function: atLeast()",permalink:"/liquidscript/api/namespaces/filters/functions/atLeast"}},o={},d=[{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Defined in",id:"defined-in",level:2}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"function-append",children:"Function: append()"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"append"}),"(",(0,i.jsx)(n.code,{children:"this"}),", ",(0,i.jsx)(n.code,{children:"left"}),", ",(0,i.jsx)(n.code,{children:"other"}),"): ",(0,i.jsx)(n.code,{children:"string"})," | ",(0,i.jsx)(n.a,{href:"/liquidscript/api/classes/Markup",children:(0,i.jsx)(n.code,{children:"Markup"})})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Return the input value concatenated with the argument value."}),"\n",(0,i.jsx)(n.p,{children:"If either the input value or argument are not a string, they will be\ncoerced to a string before concatenation."}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"this"}),": ",(0,i.jsx)(n.a,{href:"/liquidscript/api/type-aliases/FilterContext",children:(0,i.jsx)(n.code,{children:"FilterContext"})})]}),"\n",(0,i.jsx)(n.p,{children:"An object containing a reference to the active render context\nand any keyword/named arguments."}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"left"}),": ",(0,i.jsx)(n.code,{children:"unknown"})]}),"\n",(0,i.jsx)(n.p,{children:"Any value. Will be coerced to a string if it's not one already."}),"\n",(0,i.jsxs)(n.p,{children:["\u2022 ",(0,i.jsx)(n.strong,{children:"other"}),": ",(0,i.jsx)(n.code,{children:"unknown"})]}),"\n",(0,i.jsx)(n.p,{children:"Any value. Will be coerced to a string if it's not one already."}),"\n",(0,i.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"string"})," | ",(0,i.jsx)(n.a,{href:"/liquidscript/api/classes/Markup",children:(0,i.jsx)(n.code,{children:"Markup"})})]}),"\n",(0,i.jsx)(n.p,{children:"The input value concatenated with the argument value."}),"\n",(0,i.jsx)(n.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/jg-rp/liquidscript/blob/a95b26bf6f4636a0a0876e92052e494be9b9708e/src/builtin/filters/string.ts#L20",children:"src/builtin/filters/string.ts:20"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>a});var i=t(96540);const s={},r=i.createContext(s);function c(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);