"use strict";(self.webpackChunkliquidscript_docs=self.webpackChunkliquidscript_docs||[]).push([[5124],{9494:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>k});var r=a(6687);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),o=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=o(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=o(a),u=n,k=d["".concat(p,".").concat(u)]||d[u]||m[u]||i;return a?r.createElement(k,l(l({ref:t},c),{},{components:a})):r.createElement(k,l({ref:t},c))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[d]="string"==typeof e?e:n,l[1]=s;for(var o=2;o<i;o++)l[o]=a[o];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},1686:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>o});var r=a(1943),n=(a(6687),a(9494));const i={id:"extra.tags.BlockTag",title:"Class: BlockTag",sidebar_label:"BlockTag",custom_edit_url:null},l=void 0,s={unversionedId:"api/classes/extra.tags.BlockTag",id:"api/classes/extra.tags.BlockTag",title:"Class: BlockTag",description:"extra.tags.BlockTag",source:"@site/docs/api/classes/extra.tags.BlockTag.md",sourceDirName:"api/classes",slug:"/api/classes/extra.tags.BlockTag",permalink:"/liquidscript/api/classes/extra.tags.BlockTag",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"extra.tags.BlockTag",title:"Class: BlockTag",sidebar_label:"BlockTag",custom_edit_url:null},sidebar:"API",previous:{title:"BlockNode",permalink:"/liquidscript/api/classes/extra.tags.BlockNode"},next:{title:"CallNode",permalink:"/liquidscript/api/classes/extra.tags.CallNode"}},p={},o=[{value:"Implements",id:"implements",level:2},{value:"Constructors",id:"constructors",level:2},{value:"constructor",id:"constructor",level:3},{value:"Methods",id:"methods",level:2},{value:"parse",id:"parse",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Implementation of",id:"implementation-of",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"parseBlockName",id:"parseblockname",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4}],c={toc:o},d="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(d,(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/liquidscript/api/namespaces/extra"},"extra"),".",(0,n.kt)("a",{parentName:"p",href:"/liquidscript/api/namespaces/extra.tags"},"tags"),".BlockTag"),(0,n.kt)("p",null,"A class that implements the ",(0,n.kt)("inlineCode",{parentName:"p"},"Tag")," interface is responsible for\nparsing one or more tokens from a token stream, and returning\nan ast.Node to be added into the abstract syntax tree."),(0,n.kt)("h2",{id:"implements"},"Implements"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/liquidscript/api/interfaces/Tag"},(0,n.kt)("inlineCode",{parentName:"a"},"Tag")))),(0,n.kt)("h2",{id:"constructors"},"Constructors"),(0,n.kt)("h3",{id:"constructor"},"constructor"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("strong",{parentName:"p"},"new BlockTag"),"()"),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"parse"},"parse"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"parse"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"stream"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"environment"),"): ",(0,n.kt)("a",{parentName:"p",href:"/liquidscript/api/interfaces/Node"},(0,n.kt)("inlineCode",{parentName:"a"},"Node"))),(0,n.kt)("p",null,"Create a syntax tree node by parsing tokens from the token\nstream."),(0,n.kt)("p",null,"If implementing a block tag (one with a start and end tag),\nthe stream should be left with the end tag as its current\ntoken."),(0,n.kt)("h4",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"stream")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/liquidscript/api/interfaces/tokens.TokenStream"},(0,n.kt)("inlineCode",{parentName:"a"},"TokenStream"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"A stream of template tokens.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"environment")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/liquidscript/api/classes/Environment"},(0,n.kt)("inlineCode",{parentName:"a"},"Environment"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"The active environment.")))),(0,n.kt)("h4",{id:"returns"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/liquidscript/api/interfaces/Node"},(0,n.kt)("inlineCode",{parentName:"a"},"Node"))),(0,n.kt)("h4",{id:"implementation-of"},"Implementation of"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/liquidscript/api/interfaces/Tag"},"Tag"),".",(0,n.kt)("a",{parentName:"p",href:"/liquidscript/api/interfaces/Tag#parse"},"parse")),(0,n.kt)("h4",{id:"defined-in"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/622a8c1/src/extra/tags/extends.ts#L81"},"src/extra/tags/extends.ts:81")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"parseblockname"},"parseBlockName"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,n.kt)("strong",{parentName:"p"},"parseBlockName"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"eStream"),"): ",(0,n.kt)("a",{parentName:"p",href:"/liquidscript/api/classes/StringLiteral"},(0,n.kt)("inlineCode",{parentName:"a"},"StringLiteral"))),(0,n.kt)("h4",{id:"parameters-1"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"eStream")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"/liquidscript/api/classes/expressions.ExpressionTokenStream"},(0,n.kt)("inlineCode",{parentName:"a"},"ExpressionTokenStream")))))),(0,n.kt)("h4",{id:"returns-1"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/liquidscript/api/classes/StringLiteral"},(0,n.kt)("inlineCode",{parentName:"a"},"StringLiteral"))),(0,n.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/622a8c1/src/extra/tags/extends.ts#L124"},"src/extra/tags/extends.ts:124")))}m.isMDXComponent=!0}}]);