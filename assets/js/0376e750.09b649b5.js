"use strict";(self.webpackChunkliquidscript_docs=self.webpackChunkliquidscript_docs||[]).push([[8286],{9494:function(e,t,a){a.d(t,{Zo:function(){return m},kt:function(){return u}});var n=a(6687);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),o=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=o(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),d=o(a),u=r,k=d["".concat(s,".").concat(u)]||d[u]||c[u]||i;return a?n.createElement(k,l(l({ref:t},m),{},{components:a})):n.createElement(k,l({ref:t},m))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=d;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:r,l[1]=p;for(var o=2;o<i;o++)l[o]=a[o];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},9846:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return p},metadata:function(){return o},toc:function(){return c}});var n=a(9853),r=a(5309),i=(a(6687),a(9494)),l=["components"],p={id:"Tag",title:"Interface: Tag",sidebar_label:"Tag",sidebar_position:0,custom_edit_url:null},s=void 0,o={unversionedId:"api/interfaces/Tag",id:"api/interfaces/Tag",title:"Interface: Tag",description:"A class that implements the Tag interface is responsible for",source:"@site/docs/api/interfaces/Tag.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/Tag",permalink:"/liquidscript/api/interfaces/Tag",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"Tag",title:"Interface: Tag",sidebar_label:"Tag",sidebar_position:0,custom_edit_url:null},sidebar:"API",previous:{title:"RenderStream",permalink:"/liquidscript/api/interfaces/RenderStream"},next:{title:"TokenStream",permalink:"/liquidscript/api/interfaces/tokens.TokenStream"}},m={},c=[{value:"Implemented by",id:"implemented-by",level:2},{value:"Methods",id:"methods",level:2},{value:"parse",id:"parse",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4}],d={toc:c};function u(e){var t=e.components,a=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"A class that implements the ",(0,i.kt)("inlineCode",{parentName:"p"},"Tag")," interface is responsible for\nparsing one or more tokens from a token stream, and returning\nan {@link ast.Node} to be added into the abstract syntax tree."),(0,i.kt)("h2",{id:"implemented-by"},"Implemented by"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/liquidscript/api/classes/tags.AssignTag"},(0,i.kt)("inlineCode",{parentName:"a"},"AssignTag"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/liquidscript/api/classes/tags.BreakTag"},(0,i.kt)("inlineCode",{parentName:"a"},"BreakTag"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/liquidscript/api/classes/tags.CaptureTag"},(0,i.kt)("inlineCode",{parentName:"a"},"CaptureTag"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/liquidscript/api/classes/tags.CaseTag"},(0,i.kt)("inlineCode",{parentName:"a"},"CaseTag"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/liquidscript/api/classes/tags.CommentTag"},(0,i.kt)("inlineCode",{parentName:"a"},"CommentTag"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/liquidscript/api/classes/tags.ContinueTag"},(0,i.kt)("inlineCode",{parentName:"a"},"ContinueTag"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/liquidscript/api/classes/tags.CycleTag"},(0,i.kt)("inlineCode",{parentName:"a"},"CycleTag"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/liquidscript/api/classes/tags.DecrementTag"},(0,i.kt)("inlineCode",{parentName:"a"},"DecrementTag"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/liquidscript/api/classes/tags.EchoTag"},(0,i.kt)("inlineCode",{parentName:"a"},"EchoTag"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/liquidscript/api/classes/tags.ForTag"},(0,i.kt)("inlineCode",{parentName:"a"},"ForTag"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/liquidscript/api/classes/tags.IfChangedTag"},(0,i.kt)("inlineCode",{parentName:"a"},"IfChangedTag"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/liquidscript/api/classes/tags.IfTag"},(0,i.kt)("inlineCode",{parentName:"a"},"IfTag"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/liquidscript/api/classes/tags.IncludeTag"},(0,i.kt)("inlineCode",{parentName:"a"},"IncludeTag"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/liquidscript/api/classes/tags.IncrementTag"},(0,i.kt)("inlineCode",{parentName:"a"},"IncrementTag"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/liquidscript/api/classes/tags.LiquidTag"},(0,i.kt)("inlineCode",{parentName:"a"},"LiquidTag"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/liquidscript/api/classes/tags.OutputStatement"},(0,i.kt)("inlineCode",{parentName:"a"},"OutputStatement"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/liquidscript/api/classes/tags.RenderTag"},(0,i.kt)("inlineCode",{parentName:"a"},"RenderTag"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/liquidscript/api/classes/tags.TableRowTag"},(0,i.kt)("inlineCode",{parentName:"a"},"TableRowTag"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/liquidscript/api/classes/tags.TemplateLiteral"},(0,i.kt)("inlineCode",{parentName:"a"},"TemplateLiteral"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/liquidscript/api/classes/tags.UnlessTag"},(0,i.kt)("inlineCode",{parentName:"a"},"UnlessTag"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/liquidscript/api/classes/extra.tags.WithTag"},(0,i.kt)("inlineCode",{parentName:"a"},"WithTag")))),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"parse"},"parse"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"parse"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"stream"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"environment"),"): ",(0,i.kt)("a",{parentName:"p",href:"/liquidscript/api/interfaces/Node"},(0,i.kt)("inlineCode",{parentName:"a"},"Node"))),(0,i.kt)("p",null,"Create a syntax tree node by parsing tokens from the token\nstream."),(0,i.kt)("p",null,"If implementing a block tag (one with a start and end tag),\nthe stream should be left with the end tag as its current\ntoken."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"stream")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/liquidscript/api/interfaces/tokens.TokenStream"},(0,i.kt)("inlineCode",{parentName:"a"},"TokenStream"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"A stream of template tokens.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"environment")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/liquidscript/api/classes/Environment"},(0,i.kt)("inlineCode",{parentName:"a"},"Environment"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The active environment.")))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/liquidscript/api/interfaces/Node"},(0,i.kt)("inlineCode",{parentName:"a"},"Node"))),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/8d3d518/src/tag.ts#L22"},"src/tag.ts:22")))}u.isMDXComponent=!0}}]);