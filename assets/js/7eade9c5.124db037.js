"use strict";(self.webpackChunkliquidscript_docs=self.webpackChunkliquidscript_docs||[]).push([[48226],{3292:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>o});var i=t(74848),s=t(28453);const r={},l="Loading Templates",d={id:"introduction/loading-templates",title:"Loading Templates",description:"You can load templates from a file system or database, for example, by creating an Environment and configuring a template loader. You'd also need a loader if you want to use the built-in include or render tags.",source:"@site/docs/introduction/loading-templates.md",sourceDirName:"introduction",slug:"/introduction/loading-templates",permalink:"/liquidscript/introduction/loading-templates",draft:!1,unlisted:!1,editUrl:"https://github.com/jg-rp/liquidscript/tree/docs/docs/introduction/loading-templates.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Getting Started",permalink:"/liquidscript/introduction/getting-started"},next:{title:"Render Context",permalink:"/liquidscript/introduction/render-context"}},a={},o=[{value:"Built-In Template Loaders",id:"built-in-template-loaders",level:2},{value:"Generic",id:"generic",level:3},{value:"Node.js",id:"nodejs",level:3},{value:"Browser",id:"browser",level:3}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"loading-templates",children:"Loading Templates"}),"\n",(0,i.jsxs)(n.p,{children:["You can load templates from a file system or database, for example, by creating an ",(0,i.jsx)(n.a,{href:"/liquidscript/api/classes/Environment",children:"Environment"})," and configuring a template ",(0,i.jsx)(n.em,{children:"loader"}),". You'd also need a loader if you want to use the built-in ",(0,i.jsx)(n.a,{href:"/liquidscript/language/tags#include",children:"include"})," or ",(0,i.jsx)(n.a,{href:"/liquidscript/language/tags#render",children:"render"})," tags."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/liquidscript/api/classes/Environment#gettemplate",children:(0,i.jsx)(n.code,{children:"Environment.getTemplate()"})})," and ",(0,i.jsx)(n.a,{href:"/liquidscript/api/classes/Environment#gettemplatesync",children:(0,i.jsx)(n.code,{children:"Environment.getTemplateSync()"})})," accept a template name and return a ",(0,i.jsx)(n.a,{href:"/liquidscript/api/classes/Template",children:(0,i.jsx)(n.code,{children:"Template"})})," that is bound to the environment, ready to be rendered. The configured loader is responsible for interpreting template names. In the case of a ",(0,i.jsx)(n.a,{href:"/liquidscript/api/classes/NodeFileSystemLoader",children:(0,i.jsx)(n.code,{children:"NodeFileSystemLoader"})}),", the name would be a file name, relative to the loader's search path."]}),"\n",(0,i.jsxs)(n.p,{children:["This example assumes a folder called ",(0,i.jsx)(n.code,{children:"templates"})," exists in the current working directory, and that template files ",(0,i.jsx)(n.code,{children:"index.html"})," and ",(0,i.jsx)(n.code,{children:"some-list.html"})," exist within it."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",metastring:'title="templates/index.html"',children:"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <title>{{ page_title }}</title>\n  </head>\n  <body>\n    <h1>{{ heading }}</h1>\n    {% render 'some-list.html' with people %}\n  </body>\n</html>\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",metastring:'title="templates/some-list.html"',children:"<ul>\n  {% for person in people %}\n  <li>{{ person.name }}</li>\n  {% endfor %}\n</ul>\n"})}),"\n",(0,i.jsxs)(n.p,{children:["By default, every ",(0,i.jsx)(n.a,{href:"/liquidscript/api/classes/Environment",children:"Environment"})," is created with an empty ",(0,i.jsx)(n.a,{href:"/liquidscript/api/classes/MapLoader",children:(0,i.jsx)(n.code,{children:"MapLoader"})}),". Specify an alternative template loader using the ",(0,i.jsx)(n.code,{children:"loader"})," option."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'import { Environment, NodeFileSystemLoader } from "liquidscript";\n\nconst env = new Environment({\n  loader: new NodeFileSystemLoader("./templates/", {\n    fileExtension: ".liquid",\n  }),\n});\n\nconst template = env.getTemplateSync("index.html");\nconst result = template.renderSync({\n  heading: "Some List",\n  page_title: "Awesome Title",\n  people: [{ name: "John" }, { name: "Sally" }],\n});\n\nconsole.log(result);\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",metastring:'title="Output"',children:'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <title>Awesome Title</title>\n  </head>\n  <body>\n    <h1>Some List</h1>\n    <ul>\n      <li>John</li>\n      <li>Sally</li>\n    </ul>\n  </body>\n</html>\n'})}),"\n",(0,i.jsx)(n.h2,{id:"built-in-template-loaders",children:"Built-In Template Loaders"}),"\n",(0,i.jsx)(n.p,{children:"LiquidScript includes some generic templates loaders, and some that are specific to Node.js or the web browser."}),"\n",(0,i.jsx)(n.h3,{id:"generic",children:"Generic"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Loader"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"/liquidscript/api/classes/MapLoader",children:(0,i.jsx)(n.code,{children:"MapLoader"})})}),(0,i.jsx)(n.td,{children:"A template loader that uses a Map of string names to template source code strings."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"/liquidscript/api/classes/ObjectLoader",children:(0,i.jsx)(n.code,{children:"ObjectLoader"})})}),(0,i.jsx)(n.td,{children:"A template loader that uses a plain object to map string names to template source code string."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"/liquidscript/api/classes/ChoiceLoader",children:(0,i.jsx)(n.code,{children:"ChoiceLoader"})})}),(0,i.jsx)(n.td,{children:"A template loader that will try each of an array of loaders until a matching template is found."})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"nodejs",children:"Node.js"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Loader"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"/liquidscript/api/classes/NodeFileSystemLoader",children:(0,i.jsx)(n.code,{children:"NodeFileSystemLoader"})})}),(0,i.jsxs)(n.td,{children:["A template loader that reads templates from a file system using Node's ",(0,i.jsx)(n.code,{children:"fs"})," module."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"/liquidscript/api/classes/CachingNodeFileSystemLoader",children:(0,i.jsx)(n.code,{children:"CachingNodeFileSystemLoader"})})}),(0,i.jsx)(n.td,{children:"A template loader that caches templates read from a file system."})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"browser",children:"Browser"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Loader"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"/liquidscript/api/classes/FetchLoader",children:(0,i.jsx)(n.code,{children:"FetchLoader"})})}),(0,i.jsxs)(n.td,{children:["A template loader that fetches templates using the ",(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API",children:"Fetch API"}),"."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"/liquidscript/api/classes/XMLHttpRequestLoader",children:(0,i.jsx)(n.code,{children:"XMLHttpRequestLoader"})})}),(0,i.jsxs)(n.td,{children:["A template loader that uses ",(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest",children:"XMLHttpRequest"})," to fetch templates."]})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>d});var i=t(96540);const s={},r=i.createContext(s);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);