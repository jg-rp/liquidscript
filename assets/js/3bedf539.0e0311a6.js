"use strict";(self.webpackChunkliquidscript_docs=self.webpackChunkliquidscript_docs||[]).push([[1326],{9494:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return g}});var n=a(6687);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),m=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},d=function(e){var t=m(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",o={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),u=m(a),k=r,g=u["".concat(l,".").concat(k)]||u[k]||o[k]||i;return a?n.createElement(g,s(s({ref:t},d),{},{components:a})):n.createElement(g,s({ref:t},d))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,s=new Array(i);s[0]=k;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[u]="string"==typeof e?e:r,s[1]=p;for(var m=2;m<i;m++)s[m]=a[m];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},2939:function(e,t,a){a.r(t),a.d(t,{assets:function(){return l},contentTitle:function(){return s},default:function(){return o},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return m}});var n=a(1943),r=(a(6687),a(9494));const i={id:"expressions.arguments",title:"Namespace: arguments",sidebar_label:"arguments",custom_edit_url:null},s=void 0,p={unversionedId:"api/namespaces/expressions.arguments",id:"api/namespaces/expressions.arguments",title:"Namespace: arguments",description:"expressions.arguments",source:"@site/docs/api/namespaces/expressions.arguments.md",sourceDirName:"api/namespaces",slug:"/api/namespaces/expressions.arguments",permalink:"/liquidscript/api/namespaces/expressions.arguments",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"expressions.arguments",title:"Namespace: arguments",sidebar_label:"arguments",custom_edit_url:null},sidebar:"API",previous:{title:"tokens",permalink:"/liquidscript/api/namespaces/tokens"},next:{title:"boolean",permalink:"/liquidscript/api/namespaces/expressions.boolean"}},l={},m=[{value:"Type Aliases",id:"type-aliases",level:2},{value:"Argument",id:"argument",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"ArgumentList",id:"argumentlist",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"ArgumentListParser",id:"argumentlistparser",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"Parameters",id:"parameters",level:5},{value:"Returns",id:"returns",level:5},{value:"Defined in",id:"defined-in-2",level:4},{value:"ArgumentParser",id:"argumentparser",level:3},{value:"Type declaration",id:"type-declaration-1",level:4},{value:"Parameters",id:"parameters-1",level:5},{value:"Returns",id:"returns-1",level:5},{value:"Defined in",id:"defined-in-3",level:4},{value:"Arguments",id:"arguments",level:3},{value:"Index signature",id:"index-signature",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"Variables",id:"variables",level:2},{value:"RE",id:"re",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"RULES",id:"rules",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"Functions",id:"functions",level:2},{value:"makeParseArguments",id:"makeparsearguments",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"makeTokenizer",id:"maketokenizer",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"parse",id:"parse",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"parseArguments",id:"parsearguments",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"parseCallArguments",id:"parsecallarguments",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"parseColonSeparatedArguments",id:"parsecolonseparatedarguments",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"parseEqualsSeparatedArguments",id:"parseequalsseparatedarguments",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"parseMacroArguments",id:"parsemacroarguments",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"tokenize",id:"tokenize",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-15",level:4}],d={toc:m},u="wrapper";function o(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/namespaces/expressions"},"expressions"),".arguments"),(0,r.kt)("h2",{id:"type-aliases"},"Type Aliases"),(0,r.kt)("h3",{id:"argument"},"Argument"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"Argument"),": [",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/interfaces/Expression"},(0,r.kt)("inlineCode",{parentName:"a"},"Expression")),"]"),(0,r.kt)("p",null,"The value returned from an argument parser function."),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/364f972/src/expressions/arguments/parse.ts#L17"},"src/expressions/arguments/parse.ts:17")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"argumentlist"},"ArgumentList"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ArgumentList"),": ",(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/namespaces/expressions.arguments#argument"},(0,r.kt)("inlineCode",{parentName:"a"},"Argument")),"[]"),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/364f972/src/expressions/arguments/parse.ts#L31"},"src/expressions/arguments/parse.ts:31")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"argumentlistparser"},"ArgumentListParser"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ArgumentListParser"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"stream"),": ",(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/classes/expressions.ExpressionTokenStream"},(0,r.kt)("inlineCode",{parentName:"a"},"ExpressionTokenStream")),") => ",(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/namespaces/expressions.arguments#argumentlist"},(0,r.kt)("inlineCode",{parentName:"a"},"ArgumentList"))),(0,r.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"stream"),"): ",(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/namespaces/expressions.arguments#argumentlist"},(0,r.kt)("inlineCode",{parentName:"a"},"ArgumentList"))),(0,r.kt)("h5",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"stream")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/liquidscript/api/classes/expressions.ExpressionTokenStream"},(0,r.kt)("inlineCode",{parentName:"a"},"ExpressionTokenStream")))))),(0,r.kt)("h5",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/namespaces/expressions.arguments#argumentlist"},(0,r.kt)("inlineCode",{parentName:"a"},"ArgumentList"))),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/364f972/src/expressions/arguments/parse.ts#L33"},"src/expressions/arguments/parse.ts:33")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"argumentparser"},"ArgumentParser"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"ArgumentParser"),": (",(0,r.kt)("inlineCode",{parentName:"p"},"stream"),": ",(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/classes/expressions.ExpressionTokenStream"},(0,r.kt)("inlineCode",{parentName:"a"},"ExpressionTokenStream")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"separator"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),") => ",(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/namespaces/expressions.arguments#argument"},(0,r.kt)("inlineCode",{parentName:"a"},"Argument"))),(0,r.kt)("h4",{id:"type-declaration-1"},"Type declaration"),(0,r.kt)("p",null,"\u25b8 (",(0,r.kt)("inlineCode",{parentName:"p"},"stream"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"separator"),"): ",(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/namespaces/expressions.arguments#argument"},(0,r.kt)("inlineCode",{parentName:"a"},"Argument"))),(0,r.kt)("h5",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"stream")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/liquidscript/api/classes/expressions.ExpressionTokenStream"},(0,r.kt)("inlineCode",{parentName:"a"},"ExpressionTokenStream")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"separator")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string"))))),(0,r.kt)("h5",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/namespaces/expressions.arguments#argument"},(0,r.kt)("inlineCode",{parentName:"a"},"Argument"))),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/364f972/src/expressions/arguments/parse.ts#L19"},"src/expressions/arguments/parse.ts:19")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"arguments"},"Arguments"),(0,r.kt)("p",null,"\u01ac ",(0,r.kt)("strong",{parentName:"p"},"Arguments"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"An object mapping argument names to Liquid expressions."),(0,r.kt)("h4",{id:"index-signature"},"Index signature"),(0,r.kt)("p",null,"\u25aa ","[index: ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"]",": ",(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/interfaces/Expression"},(0,r.kt)("inlineCode",{parentName:"a"},"Expression"))),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/364f972/src/expressions/arguments/parse.ts#L27"},"src/expressions/arguments/parse.ts:27")),(0,r.kt)("h2",{id:"variables"},"Variables"),(0,r.kt)("h3",{id:"re"},"RE"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,r.kt)("strong",{parentName:"p"},"RE"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"RegExp")),(0,r.kt)("p",null,"The compiled regular expression, built using ",(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/namespaces/expressions.arguments#rules"},"RULES"),"."),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/364f972/src/expressions/arguments/lex.ts#L71"},"src/expressions/arguments/lex.ts:71")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"rules"},"RULES"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,r.kt)("strong",{parentName:"p"},"RULES"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"[][]"),(0,r.kt)("p",null,"Regular expression patterns for tokens in a Liquid argument list."),(0,r.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/364f972/src/expressions/arguments/lex.ts#L40"},"src/expressions/arguments/lex.ts:40")),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"makeparsearguments"},"makeParseArguments"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"makeParseArguments"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"argumentParser"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"separatorTokenKind?"),"): ",(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/namespaces/expressions.arguments#argumentlistparser"},(0,r.kt)("inlineCode",{parentName:"a"},"ArgumentListParser"))),(0,r.kt)("p",null,"Return a function to parse keyword or named arguments from a stream of\nexpression tokens until the end of the stream."),(0,r.kt)("h4",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"argumentParser")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/liquidscript/api/namespaces/expressions.arguments#argumentparser"},(0,r.kt)("inlineCode",{parentName:"a"},"ArgumentParser"))),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A function that will parse a single argument.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"separatorTokenKind")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"TOKEN_COLON")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The token kind that separates an argument's key from its value.")))),(0,r.kt)("h4",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/namespaces/expressions.arguments#argumentlistparser"},(0,r.kt)("inlineCode",{parentName:"a"},"ArgumentListParser"))),(0,r.kt)("p",null,"An object with string keys and ",(0,r.kt)("inlineCode",{parentName:"p"},"Expression")," values."),(0,r.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/364f972/src/expressions/arguments/parse.ts#L46"},"src/expressions/arguments/parse.ts:46")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"maketokenizer"},"makeTokenizer"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"makeTokenizer"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"re"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"keywords"),"): ",(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/namespaces/expressions#tokenizer"},(0,r.kt)("inlineCode",{parentName:"a"},"Tokenizer"))),(0,r.kt)("p",null,"Returns a generator function for tokenizing argument list expressions\nusing the given regular expression and keywords."),(0,r.kt)("h4",{id:"parameters-3"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"re")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"RegExp"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"keywords")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Set"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"string"),">")))),(0,r.kt)("h4",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/namespaces/expressions#tokenizer"},(0,r.kt)("inlineCode",{parentName:"a"},"Tokenizer"))),(0,r.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/364f972/src/expressions/arguments/lex.ts#L250"},"src/expressions/arguments/lex.ts:250")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"parse"},"parse"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"parse"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"expr"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"separatorTokenKind?"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"startIndex?"),"): ",(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/namespaces/expressions.arguments#arguments"},(0,r.kt)("inlineCode",{parentName:"a"},"Arguments"))),(0,r.kt)("p",null,"Parse keyword or named arguments from a Liquid expression string."),(0,r.kt)("p",null,"Each key/value pair is assumed to be separated by a comma. Leading and\ntrailing commas are OK."),(0,r.kt)("p",null,'If the same key/name appears multiple times, the last occurrence in the\nargument "list" will take priority.'),(0,r.kt)("p",null,"Values can be string, integer, float, true, false or nil literals, an\nidentifier or a range expression. An identifier value could be chained\nusing a mixture of dot and bracket notation."),(0,r.kt)("h4",{id:"parameters-4"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"expr")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A Liquid expression containing zero or more keyword arguments.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"separatorTokenKind")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"TOKEN_COLON")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The token kind that separates an arguments key from its value.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"startIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"1")),(0,r.kt)("td",{parentName:"tr",align:"left"},"-")))),(0,r.kt)("h4",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/namespaces/expressions.arguments#arguments"},(0,r.kt)("inlineCode",{parentName:"a"},"Arguments"))),(0,r.kt)("p",null,"An object with string keys and ",(0,r.kt)("inlineCode",{parentName:"p"},"Expression")," values."),(0,r.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/364f972/src/expressions/arguments/parse.ts#L192"},"src/expressions/arguments/parse.ts:192")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"parsearguments"},"parseArguments"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"parseArguments"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"stream"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"separatorTokenKind?"),"): ",(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/namespaces/expressions.arguments#arguments"},(0,r.kt)("inlineCode",{parentName:"a"},"Arguments"))),(0,r.kt)("p",null,"Parse keyword or named arguments from a stream of expression tokens\nuntil the end of the stream."),(0,r.kt)("p",null,"Each key/value pair is assumed to be separated by a comma. Leading and\ntrailing commas are OK."),(0,r.kt)("p",null,'If the same key/name appears multiple times, the last occurrence in the\nargument "list" will take priority.'),(0,r.kt)("p",null,"Values can be string, integer, float, true, false or nil literals, an\nidentifier or a range expression. An identifier value could be chained\nusing a mixture of dot and bracket notation."),(0,r.kt)("h4",{id:"parameters-5"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"stream")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/liquidscript/api/classes/expressions.ExpressionTokenStream"},(0,r.kt)("inlineCode",{parentName:"a"},"ExpressionTokenStream"))),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A stream of expression tokens.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"separatorTokenKind")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"TOKEN_COLON")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The token kind that separates an arguments key from its value.")))),(0,r.kt)("h4",{id:"returns-5"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/namespaces/expressions.arguments#arguments"},(0,r.kt)("inlineCode",{parentName:"a"},"Arguments"))),(0,r.kt)("p",null,"An object with string keys and ",(0,r.kt)("inlineCode",{parentName:"p"},"Expression")," values."),(0,r.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/364f972/src/expressions/arguments/parse.ts#L102"},"src/expressions/arguments/parse.ts:102")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"parsecallarguments"},"parseCallArguments"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"parseCallArguments"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"expr"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"startIndex?"),"): [",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/namespaces/expressions.arguments#argumentlist"},(0,r.kt)("inlineCode",{parentName:"a"},"ArgumentList")),"]"),(0,r.kt)("p",null,"Parse a call tag argument list."),(0,r.kt)("h4",{id:"parameters-6"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"expr")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A call tag expression.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"startIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"1")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Location in the template source text where this expression starts.")))),(0,r.kt)("h4",{id:"returns-6"},"Returns"),(0,r.kt)("p",null,"[",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/namespaces/expressions.arguments#argumentlist"},(0,r.kt)("inlineCode",{parentName:"a"},"ArgumentList")),"]"),(0,r.kt)("p",null,"An array of macro name and the arguments it's being called with."),(0,r.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/364f972/src/expressions/arguments/parse.ts#L241"},"src/expressions/arguments/parse.ts:241")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"parsecolonseparatedarguments"},"parseColonSeparatedArguments"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"parseColonSeparatedArguments"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"stream"),"): ",(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/namespaces/expressions.arguments#argumentlist"},(0,r.kt)("inlineCode",{parentName:"a"},"ArgumentList"))),(0,r.kt)("h4",{id:"parameters-7"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"stream")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/liquidscript/api/classes/expressions.ExpressionTokenStream"},(0,r.kt)("inlineCode",{parentName:"a"},"ExpressionTokenStream")))))),(0,r.kt)("h4",{id:"returns-7"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/namespaces/expressions.arguments#argumentlist"},(0,r.kt)("inlineCode",{parentName:"a"},"ArgumentList"))),(0,r.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/364f972/src/expressions/arguments/parse.ts#L33"},"src/expressions/arguments/parse.ts:33")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"parseequalsseparatedarguments"},"parseEqualsSeparatedArguments"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"parseEqualsSeparatedArguments"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"stream"),"): ",(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/namespaces/expressions.arguments#argumentlist"},(0,r.kt)("inlineCode",{parentName:"a"},"ArgumentList"))),(0,r.kt)("h4",{id:"parameters-8"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"stream")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"/liquidscript/api/classes/expressions.ExpressionTokenStream"},(0,r.kt)("inlineCode",{parentName:"a"},"ExpressionTokenStream")))))),(0,r.kt)("h4",{id:"returns-8"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/namespaces/expressions.arguments#argumentlist"},(0,r.kt)("inlineCode",{parentName:"a"},"ArgumentList"))),(0,r.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/364f972/src/expressions/arguments/parse.ts#L33"},"src/expressions/arguments/parse.ts:33")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"parsemacroarguments"},"parseMacroArguments"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"parseMacroArguments"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"expr"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"startIndex?"),"): [",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/namespaces/expressions.arguments#argumentlist"},(0,r.kt)("inlineCode",{parentName:"a"},"ArgumentList")),"]"),(0,r.kt)("p",null,"Parse a macro tag argument list."),(0,r.kt)("h4",{id:"parameters-9"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"expr")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"undefined")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A macro tag expression.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"startIndex")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"1")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Location in the template source text where this expression starts.")))),(0,r.kt)("h4",{id:"returns-9"},"Returns"),(0,r.kt)("p",null,"[",(0,r.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/namespaces/expressions.arguments#argumentlist"},(0,r.kt)("inlineCode",{parentName:"a"},"ArgumentList")),"]"),(0,r.kt)("p",null,"An array of macro name and its argument list."),(0,r.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/364f972/src/expressions/arguments/parse.ts#L224"},"src/expressions/arguments/parse.ts:224")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tokenize"},"tokenize"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"tokenize"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"expression"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"startIndex?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Generator"),"<",(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/classes/tokens.Token"},(0,r.kt)("inlineCode",{parentName:"a"},"Token")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"unknown"),">"),(0,r.kt)("h4",{id:"parameters-10"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"expression")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"startIndex?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number"))))),(0,r.kt)("h4",{id:"returns-10"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Generator"),"<",(0,r.kt)("a",{parentName:"p",href:"/liquidscript/api/classes/tokens.Token"},(0,r.kt)("inlineCode",{parentName:"a"},"Token")),", ",(0,r.kt)("inlineCode",{parentName:"p"},"any"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"unknown"),">"),(0,r.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/jg-rp/liquidscript/blob/364f972/src/expressions/common.ts#L48"},"src/expressions/common.ts:48")))}o.isMDXComponent=!0}}]);